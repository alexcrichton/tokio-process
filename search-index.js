var N=null,E="",T="t",U="u",searchIndex={};
var R=["Executes the command as a child process, returning a…","result","child","statusasync","Executes a command as a child process, waiting for it to…","handle","Executes the command as a child process, waiting for it to…","outputasync","option","try_from","try_into","borrow_mut","into_future","type_id","borrow","typeid","formatter","as_raw_fd","exitstatus","CommandExt","WaitWithOutput","StatusAsync","OutputAsync","ChildStdin","ChildStdout","ChildStderr"];
searchIndex["cat"]={"doc":E,"i":[],"p":[]};
searchIndex["exit"]={"doc":E,"i":[],"p":[]};
searchIndex["tokio_process"]={"doc":"An implementation of asynchronous process management for…","i":[[3,"Child","tokio_process","Representation of a child process spawned onto an event…",N,N],[3,R[20],E,"Future returned from the `Child::wait_with_output` method.",N,N],[3,R[21],E,"Future returned by the `CommandExt::status_async` method.",N,N],[3,R[22],E,"Future returned by the `CommandExt::output_async` method.",N,N],[3,R[23],E,"The standard input stream for spawned children.",N,N],[3,R[24],E,"The standard output stream for spawned children.",N,N],[3,R[25],E,"The standard error stream for spawned children.",N,N],[8,R[19],E,"Extensions provided by this crate to the `Command` type in…",N,N],[11,"spawn_async",E,R[0],0,[[["self"]],[[R[1],[R[2]]],[R[2]]]]],[10,"spawn_async_with_handle",E,R[0],0,[[["self"],[R[5]]],[[R[1],[R[2]]],[R[2]]]]],[11,"status_async",E,R[4],0,[[["self"]],[[R[1],[R[3]]],[R[3]]]]],[10,"status_async_with_handle",E,R[4],0,[[["self"],[R[5]]],[[R[1],[R[3]]],[R[3]]]]],[11,"output_async",E,R[6],0,[[["self"]],[R[7]]]],[10,"output_async_with_handle",E,R[6],0,[[["self"],[R[5]]],[R[7]]]],[11,"id",E,"Returns the OS-assigned process identifier associated with…",1,[[["self"]],["u32"]]],[11,"kill",E,"Forces the child to exit.",1,[[["self"]],[R[1]]]],[11,"stdin",E,"Returns a handle for writing to the child's stdin, if it…",1,[[["self"]],[R[8]]]],[11,"stdout",E,"Returns a handle for writing to the child's stdout, if it…",1,[[["self"]],[R[8]]]],[11,"stderr",E,"Returns a handle for writing to the child's stderr, if it…",1,[[["self"]],[R[8]]]],[11,"wait_with_output",E,"Returns a future that will resolve to an `Output`,…",1,[[],["waitwithoutput"]]],[11,"forget",E,"Drop this `Child` without killing the underlying process.",1,[[]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[R[15]]]],[11,R[12],E,E,1,[[],["f"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[R[15]]]],[11,R[12],E,E,2,[[],["f"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[R[15]]]],[11,R[12],E,E,3,[[],["f"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[R[15]]]],[11,R[12],E,E,4,[[],["f"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[9],E,E,5,[[[U]],[R[1]]]],[11,R[10],E,E,5,[[],[R[1]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[R[15]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[9],E,E,6,[[[U]],[R[1]]]],[11,R[10],E,E,6,[[],[R[1]]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[R[15]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[9],E,E,7,[[[U]],[R[1]]]],[11,R[10],E,E,7,[[],[R[1]]]],[11,R[11],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[16]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[16]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[16]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[16]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[16]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[16]]],[R[1]]]],[11,R[17],E,E,5,[[["self"]],["rawfd"]]],[11,R[17],E,E,6,[[["self"]],["rawfd"]]],[11,R[17],E,E,7,[[["self"]],["rawfd"]]],[11,"read",E,E,6,[[["self"]],[["usize"],[R[1],["usize"]]]]],[11,"read",E,E,7,[[["self"]],[["usize"],[R[1],["usize"]]]]],[11,"write",E,E,5,[[["self"]],[["usize"],[R[1],["usize"]]]]],[11,"flush",E,E,5,[[["self"]],[R[1]]]],[11,"poll",E,E,1,[[["self"]],[[R[18]],["poll",[R[18],"error"]],["error"]]]],[11,"poll",E,E,2,[[["self"]],[["error"],["poll",["output","error"]],["output"]]]],[11,"poll",E,E,3,[[["self"]],[[R[18]],["poll",[R[18],"error"]],["error"]]]],[11,"poll",E,E,4,[[["self"]],[["error"],["poll",["output","error"]],["output"]]]],[11,"shutdown",E,E,5,[[["self"]],[["error"],["poll",["error"]]]]]],"p":[[8,R[19]],[3,"Child"],[3,R[20]],[3,R[21]],[3,R[22]],[3,R[23]],[3,R[24]],[3,R[25]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);